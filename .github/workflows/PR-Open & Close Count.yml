name: PR-Open & Close Count

on:
  schedule:
    - cron: '55 14 * * *'
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PULSE_API_KEY: ${{secrets.PULSE_API_KEY}}
      PULSE_BASEURL: https://pulse-metrics.com
      PULSE_API: /api/v1/projects/xx/repositories/xx
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_API: /repos/${{ github.repository }}/pulls?state=all
      PER_PAGE: 100
      NO_LINK: nolink

    steps:
    - name: Clone
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'    
      
    - name: Install dependencies
      run: pip install -r requirements.txt
      working-directory: ./.github/workflows
      
    - name: Get last page
      run: | 
        python ./.github/workflows/requests_last_page.py $GITHUB_API_URL $GITHUB_API $PER_PAGE $GITHUB_TOKEN >get_page
        
        if [ `cat get_page` = $NO_LINK ]; then
            echo There is only 1 page.
            echo 1 >last_page
            cat last_page
        else
            echo The last page is ...
            cat get_page | sed 's/,/\n/g' | sed -n 2p | grep -o '&page=.*>; rel="last"' | sed 's/&page=//g' | sed 's/>; rel="last"//g' >last_page
            cat last_page
        fi
     
    - name: Get List of PR by GitHub API
      run: |
        l=`cat last_page`
        for i in `seq $l`
        do
            echo "pull-${i}"
            curl -k -s -u :$GITHUB_TOKEN "$GITHUB_API_URL$GITHUB_API&per_page=$PER_PAGE&page=${i}" >>PR_List_all
        done
        cat PR_List_all
        
    - name: Count the number of today's Pullrequest
      run: |
        today=`date '+%Y-%m-%d'`
        echo $today
        
        echo Open-PullRequest
        cat PR_List_all | jq --arg TODAY $today '.[] | select(.created_at !=null) | select(.created_at | contains($TODAY)).id' >jq_id_open
        cat jq_id_open
        wc -l jq_id_open >id_open_count
        cut -f 1 -d " " id_open_count >open_count
        cat open_count
        
        echo Closed-PullRequest
        cat PR_List_all | jq --arg TODAY $today '.[] | select(.closed_at !=null) | select(.closed_at | contains($TODAY)).id' >jq_id_close
        cat jq_id_close
        wc -l jq_id_close >id_close_count
        cut -f 1 -d " " id_close_count >close_count
        cat close_count
        
    - name: Date & Value
      run: |
        echo Open-PullRequest
        while read v
        do
            sum=$v
        done <open_count
        echo "`date '+%Y/%-m/%-d'` $sum" >date_and_Open-PRCount
        echo "" >>date_and_Open-PRCount
        cat date_and_Open-PRCount
        
        echo Closed-PullRequest
        while read v
        do
            sum=$v
        done <close_count
        echo "`date '+%Y/%-m/%-d'` $sum" >date_and_Close-PRCount
        echo "" >>date_and_Close-PRCount
        cat date_and_Close-PRCount
    
    - name: Plot
      run: |
        echo Open-PullRequest
        while read d v
        do
            curl -X POST $PULSE_BASEURL$PULSE_API/pr_open_count_snapshots/upsert?api_key=$PULSE_API_KEY -d "pr_open_count_snapshot[target_date]=${d}&pr_open_count_snapshot[value]=${v}"
        done <date_and_Open-PRCount
           
        echo Closed-PullRequest
        while read d v
        do
            curl -X POST $PULSE_BASEURL$PULSE_API/pr_close_count_snapshots/upsert?api_key=$PULSE_API_KEY -d "pr_close_count_snapshot[target_date]=${d}&pr_close_count_snapshot[value]=${v}"
        done <date_and_Close-PRCount
